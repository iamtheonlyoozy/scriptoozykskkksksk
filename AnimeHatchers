_G.Auto2 = false
_G.Auto1 = false
_G.AutoRebirth = false
_G.Upgrade = false
_G.Auto3 = false
_G.equipbest = false
_G.autogem1 = false
_G.autogem2 = false
_G.autogem3 = false


local remothePath = game:GetService("ReplicatedStorage")

function autogem3()
    while _G.autogem3 == true do
    local args = {
    [1] = 6
    
}

        game:GetService("ReplicatedStorage").Packages.Knit.Services.EggService.RF.hatchAuto:InvokeServer(unpack(args))


        wait(0)
    end
end

function autogem1()
    while _G.autogem1 == true do
    local args = {
    [1] = 2
    
}

        game:GetService("ReplicatedStorage").Packages.Knit.Services.EggService.RF.hatchAuto:InvokeServer(unpack(args))


        wait(0)
    end
end



function autogem2()
    while _G.autogem2 == true do
    local args = {
    [1] = 4
    
}

        game:GetService("ReplicatedStorage").Packages.Knit.Services.EggService.RF.hatchAuto:InvokeServer(unpack(args))


        wait(0)
    end
end



function equipbest()
    while _G.equipbest == true do

        game:GetService("ReplicatedStorage").Packages.Knit.Services.PetService.RF.equipBest:InvokeServer()

        wait(20)
    end
end






function Upgrade()
    while _G.Upgrade == true do
   
       game:GetService("ReplicatedStorage").Packages.Knit.Services.PetService.RF.upgradeAll:InvokeServer()

       wait(0)
    end
end


function AutoRebirth()
    while _G.AutoRebirth == true do

        game:GetService("ReplicatedStorage").Packages.Knit.Services.RebirthService.RF.rebirth:InvokeServer()

        wait(0)
    end
end

function Auto3()
    while _G.Auto3 == true do
    local args = {
    [1] = 6,
    [2] = {}
}

        game:GetService("ReplicatedStorage").Packages.Knit.Services.EggService.RF.hatchAuto:InvokeServer(unpack(args))

        wait(0)
    end
end



function Auto1()
    while _G.Auto1 == true do
    local args = {
    [1] = 1,
    [2] = {}
}

        game:GetService("ReplicatedStorage").Packages.Knit.Services.EggService.RF.hatchAuto:InvokeServer(unpack(args))

        wait(0)
    end
end




function Auto2()
    while _G.Auto2 == true do
    local args = {
    [1] = 3,
    [2] = {}
}

        game:GetService("ReplicatedStorage").Packages.Knit.Services.EggService.RF.hatchAuto:InvokeServer(unpack(args))

        wait(0)
    end
end



local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/iamtheonlyoozy/oozyhubloading/main/noscamez')))()

local Window = OrionLib:MakeWindow({Name = "Anime Hatchers", HidePremium = true, SaveConfig = true, ConfigFolder = "OrionTest"})

local Tab = Window:MakeTab({
    Name = "Farm",
    Icon = "",
    PremiumOnly = false
})




Tab:AddToggle({
    Name = "EquipBest",
    Default = false,
    Callback = function(Value)
        _G.equipbest = Value
        if Value then
            equipbest()
        end
    end
})



Tab:AddToggle({
    Name = "Auto Rebirth",
    Default = false,
    Callback = function(Value)
        _G.AutoRebirth = Value
        if Value then
            AutoRebirth()
        end
    end
})


Tab:AddToggle({
    Name = "Upgrade All",
    Default = false,
    Callback = function(Value)
        _G.Upgrade = Value
        if Value then
            Upgrade()
        end
    end
})




local Tab = Window:MakeTab({
    Name = "Local Player",
    Icon = "",
    PremiumOnly = false
})


-- Add a WalkSpeed slider for the player to edit
Tab:AddSlider({
    Name = "WalkSpeed",
    Min = 30,
    Max = 701,
    Default = 31,
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = Value
            end
        end
    end
})



Tab:AddSlider({
    Name = "JumpPower",
    Min = 30,
    Max = 701,
    Default = 30,
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.JumpPower = Value
            end
        end
    end
})




Tab:AddToggle({
    Name = "Anti AFK",
    Default = false,
    Callback = function(Value)
        _G.autoAfk = Value
        if Value then
            performAntiAfk()
        end
    end
})


local Tab = Window:MakeTab({
    Name = "Eggs Money",
    Icon = "",
    PremiumOnly = false
})




Tab:AddToggle({
    Name = "Auto OnePiece",
    Default = false,
    Callback = function(Value)
        _G.Auto1 = Value
        if Value then
            Auto1()
        end
    end
})





Tab:AddToggle({
    Name = "Auto DemonSlayer",
    Default = false,
    Callback = function(Value)
        _G.Auto2 = Value
        if Value then
            Auto2()
        end
    end
})





Tab:AddToggle({
    Name = "Auto Naruto",
    Default = false,
    Callback = function(Value)
        _G.Auto3 = Value
        if Value then
            Auto3()
        end
    end
})

local Tab = Window:MakeTab({
    Name = "Eggs Gems",
    Icon = "",
    PremiumOnly = false
})


Tab:AddToggle({
    Name = "Auto OnePiece",
    Default = false,
    Callback = function(Value)
        _G.autogem1 = Value
        if Value then
            autogem1()
        end
    end
})

Tab:AddToggle({
    Name = "Auto DemonSlayer",
    Default = false,
    Callback = function(Value)
        _G.autogem2 = Value
        if Value then
            autogem2()
        end
    end
})

Tab:AddToggle({
    Name = "Auto Naruto",
    Default = false,
    Callback = function(Value)
        _G.autogem3 = Value
        if Value then
            autogem3()
        end
    end
})



local Tab = Window:MakeTab({
    Name = "Settings",
    Icon = "",
    PremiumOnly = false
})

Tab:AddButton({
    Name = "Rejoin Game",
    Callback = function()
        -- Code to rejoin the game goes here
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId)
    end
})
